"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const document_attributes_1 = require("../docx/document/document-attributes");
const indent_1 = require("../docx/paragraph/indent");
const run_fonts_1 = require("../docx/run/run-fonts");
const xml_components_1 = require("../docx/xml-components");
const abstract_numbering_1 = require("./abstract-numbering");
const num_1 = require("./num");
class Numbering extends xml_components_1.XmlComponent {
    constructor() {
        super("w:numbering");
        this.root.push(new document_attributes_1.DocumentAttributes({
            wpc: "http://schemas.microsoft.com/office/word/2010/wordprocessingCanvas",
            mc: "http://schemas.openxmlformats.org/markup-compatibility/2006",
            o: "urn:schemas-microsoft-com:office:office",
            r: "http://schemas.openxmlformats.org/officeDocument/2006/relationships",
            m: "http://schemas.openxmlformats.org/officeDocument/2006/math",
            v: "urn:schemas-microsoft-com:vml",
            wp14: "http://schemas.microsoft.com/office/word/2010/wordprocessingDrawing",
            wp: "http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing",
            w10: "urn:schemas-microsoft-com:office:word",
            w: "http://schemas.openxmlformats.org/wordprocessingml/2006/main",
            w14: "http://schemas.microsoft.com/office/word/2010/wordml",
            w15: "http://schemas.microsoft.com/office/word/2012/wordml",
            wpg: "http://schemas.microsoft.com/office/word/2010/wordprocessingGroup",
            wpi: "http://schemas.microsoft.com/office/word/2010/wordprocessingInk",
            wne: "http://schemas.microsoft.com/office/word/2006/wordml",
            wps: "http://schemas.microsoft.com/office/word/2010/wordprocessingShape",
            Ignorable: "w14 w15 wp14",
        }));
        this.nextId = 0;
        const abstractNumbering = this.createAbstractNumbering();
        abstractNumbering.createLevel(0, "bullet", "•", "left")
            .addParagraphProperty(new indent_1.Indent(720, 360))
            .addRunProperty(new run_fonts_1.RunFonts("Symbol", "default"));
        abstractNumbering.createLevel(1, "bullet", "o", "left")
            .addParagraphProperty(new indent_1.Indent(1440, 360))
            .addRunProperty(new run_fonts_1.RunFonts("Courier New", "default"));
        abstractNumbering.createLevel(2, "bullet", "•", "left")
            .addParagraphProperty(new indent_1.Indent(2160, 360))
            .addRunProperty(new run_fonts_1.RunFonts("Wingdings", "default"));
        abstractNumbering.createLevel(3, "bullet", "•", "left")
            .addParagraphProperty(new indent_1.Indent(2880, 360))
            .addRunProperty(new run_fonts_1.RunFonts("Symbol", "default"));
        abstractNumbering.createLevel(4, "bullet", "o", "left")
            .addParagraphProperty(new indent_1.Indent(3600, 360))
            .addRunProperty(new run_fonts_1.RunFonts("Courier New", "default"));
        abstractNumbering.createLevel(5, "bullet", "•", "left")
            .addParagraphProperty(new indent_1.Indent(4320, 360))
            .addRunProperty(new run_fonts_1.RunFonts("Wingdings", "default"));
        abstractNumbering.createLevel(6, "bullet", "•", "left")
            .addParagraphProperty(new indent_1.Indent(5040, 360))
            .addRunProperty(new run_fonts_1.RunFonts("Symbol", "default"));
        abstractNumbering.createLevel(7, "bullet", "o", "left")
            .addParagraphProperty(new indent_1.Indent(5760, 360))
            .addRunProperty(new run_fonts_1.RunFonts("Courier New", "default"));
        abstractNumbering.createLevel(8, "bullet", "•", "left")
            .addParagraphProperty(new indent_1.Indent(6480, 360))
            .addRunProperty(new run_fonts_1.RunFonts("Wingdings", "default"));
        this.createConcreteNumbering(abstractNumbering);
    }
    createAbstractNumbering() {
        const num = new abstract_numbering_1.AbstractNumbering(this.nextId++);
        this.root.push(num);
        return num;
    }
    createConcreteNumbering(abstractNumbering) {
        const num = new num_1.Num(this.nextId++, abstractNumbering.id);
        this.root.push(num);
        return num;
    }
}
exports.Numbering = Numbering;
//# sourceMappingURL=index.js.map